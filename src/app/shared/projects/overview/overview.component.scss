@import "mixins";

.overview-wrapper {
    padding-top: $spacing-unit*8;
    padding-bottom: $spacing-unit*8;
    overflow: hidden;
    @include respond-to(lg) {
        padding-top: $spacing-unit*16;
        padding-bottom: $spacing-unit*16;
    }
    &.brushalong {
        .container {
            .img-wrapper {
                @include respond-to(lg) {
                    flex: 0 0 450px;
                    max-width: 450px;
                }
                img {
                    width: 380px;
                    height: auto;
                    @include respond-to(lg) {
                        width: 500px;
                    }
                }
            }
        }
        &.blue-bg {
            background-color: $brushalongDarkBlue;
        }
        &.white-bg {
            background-color: $brushAlongWhite;
            .primary-color {
                color: $brushalongDarkBlue;
            }
            .white-color {
                color: $brushalongPrimary;
            }
        }
    }
    &.small-subtitle {
        .text {
            .project-subtitle {
                font-size: 18px;
                font-weight: 500;
                @include respond-to(md) {
                    font-size: 22px;
                }
                @include respond-to(lg) {
                    font-size: 28px;
                }
            } 
        }  
    }
    &.reverse {
        .container {
            flex-direction: column;
            @include respond-to(lg) {
                flex-direction: row-reverse;
            }
            
        }
    }
    &:not(.reverse) {
        .container {
            flex-direction: column;
            @include respond-to(lg) {
                flex-direction: row;
            }
            .img-wrapper {
                img {
                    @include respond-to(lg) {
                        transform: translateX(-115px);
                    }
                }
            }
        }
    }
    .container {
        display: flex;
        gap: $spacing-unit*8;
        @include respond-to(lg) {
            justify-content: space-between;
            gap: 0;
        }
        .text {
            &:not(:nth-last-of-type(1)) {
                margin-bottom: $spacing-unit*4;
            }
        }
    }
}